<!--
  **************************************************-
  ingrid-iplug-ige
  ==================================================
  Copyright (C) 2014 wemove digital solutions GmbH
  ==================================================
  Licensed under the EUPL, Version 1.1 or â€“ as soon they will be
  approved by the European Commission - subsequent versions of the
  EUPL (the "Licence");
  
  You may not use this work except in compliance with the Licence.
  You may obtain a copy of the Licence at:
  
  http://ec.europa.eu/idabc/eupl5
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the Licence is distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the Licence for the specific language governing permissions and
  limitations under the Licence.
  **************************************************#
  -->
<project name="iPlug-IGE Installation" basedir=".">
    <description>
        iPlug-IGE Installation Script
    </description>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <import file="build_mysql.xml" as="mysql" />
    <import file="build_postgres.xml" as="postgres" />

    <!-- run the ant timestamp task -->
    <tstamp/>

    <!-- =============================================
         = PROPERTIES                                =
         ============================================= -->

    <property name="iPlugName"          value="${project.build.finalName}"/>
    <property name="config"             value="${installDir}/conf/config.override.properties"/>

    <property name="mySqlDriverClass"       value="com.mysql.jdbc.Driver"/>
    <property name="mySqlDriver.jar"        value="mysql-connector-java-5.1.49.jar"/>
    <property name="mySqlHibernateDialect"  value="org.hibernate.dialect.MySQLInnoDBDialect"/>

    <property name="postgresDriverClass"       value="org.postgresql.Driver"/>
    <property name="postgresDriver.jar"        value="postgresql-42.7.2.jar"/>
    <property name="postgresHibernateDialect"  value="org.hibernate.dialect.PostgreSQLDialect"/>

    <property name="oracleDriverClass"      value="oracle.jdbc.OracleDriver"/>
    <property name="oracleHibernateDialect" value="org.hibernate.dialect.Oracle10gDialect"/>

    <!-- THIS PORPERTIES ARE NECESSARY FOR UPDATES -->
    <property name="libraryDir"         value="lib" />
    <property name="libraryIdent"       value="ingrid-mdek-api-" />
    <!-- <property name="libraryIdent"       value="MANIFEST.MF" /> -->
    <property name="versionsWithConfigurations"  value="" />
    <property name="minSupportedVersion" value="3.6.2" />

    <import file="build-installer-utils.xml"  as="utils" />
    <import file="build-patch.xml"            as="patch" />

    <!-- =============================================
         = CONFIGURATIONS                            =
         ============================================= -->
    <target name="configureProperties">
        <echo>Configure Properties
        </echo>
        <property name="_adminUser"     value="${adminUser}" />
        <property name="_adminPassword" value="${adminPassword}" />
        <property name="_dbUser"        value="${dbUser}" />
        <property name="_dbPassword"    value="${dbPassword}" />
        <property name="_dbUrl"         value="${dbUrl}" />
    </target>

    <target name="configurePropertiesFromFiles">
        <echo>Configure Properties from previous Installation
        </echo>

        <property file="${installDir}/conf/default-datasource.properties"/>
        <property name="_adminUser"     value="${hibernate.user}" />
        <property name="_adminPassword" value="${hibernate.password}" />
        <property name="_dbUser"        value="${hibernate.user}" />
        <property name="_dbPassword"    value="${hibernate.password}" />
        <property name="_dbUrl"         value="${hibernate.jdbcUrl}" />
        
        <if>
            <equals arg1="${hibernate.driverClass}" arg2="${mySqlDriverClass}" />
            <then>
                <runtarget target="setMySqlProperty"/>
            </then>
        <elseif>
            <equals arg1="${hibernate.driverClass}" arg2="${postgresDriverClass}" />
            <then>
                <runtarget target="setPostgresProperty"/>
            </then>
        </elseif>
        <else>
            <runtarget target="setOracleProperty"/>
        </else>
        </if>
    </target>

    <target name="setUpdateProperty" depends="checkPreconditionsForUpdate, UnzipInstallerForUpdate, configurePropertiesFromFiles">
        <property name="updateProcedure"  value="true" />
        <property name="installProcedure" value="false" />
    </target>
    
    <target name="setInstallProperty" depends="UnzipInstaller">
        <property name="installProcedure" value="true" />
        <property name="updateProcedure"  value="false" />
    </target>

    <target name="setInternet">
        <!-- do nothing ... is default configuration -->
    </target>

    <target name="setIntranet">
        <!-- copy spring files with mapping to override directory -->
        <copy file="./${iPlugName}/webapp/WEB-INF/presets/intranet_spring-mapper-object.xml"  todir="./${iPlugName}/webapp/WEB-INF/override" />
        <copy file="./${iPlugName}/webapp/WEB-INF/presets/intranet_spring-mapper-address.xml" todir="./${iPlugName}/webapp/WEB-INF/override" />
    </target>
    
    <target name="setMySqlProperty">
        <property name="useMysql"  value="true" />
        <property name="usePostgres"  value="false" />
        <property name="useOracle" value="false" />
    </target>

    <target name="setPostgresProperty">
        <property name="usePostgres"  value="true" />
        <property name="useMysql"  value="false" />
        <property name="useOracle" value="false" />
    </target>

    <target name="setOracleProperty">
        <property name="useOracle" value="true" />
        <property name="useMysql"  value="false" />
        <property name="usePostgres"  value="false" />
    </target>

    <target name="UnzipInstaller">
        <unzip src="${antinstaller.jar}" dest=".">
            <patternset>
                <include name="${iPlugName}/**/*.*"/>
            </patternset>
        </unzip>

        <copy file="./${iPlugName}/lib/${mySqlDriver.jar}" todir="."/>
        <copy file="./${iPlugName}/lib/${postgresDriver.jar}" todir="."/>

        <runtarget target="proceedAfterUnzipInstaller"/>
    </target>
    
    <target name="UnzipInstallerForUpdate">
        <unzip src="${antinstaller.jar}" dest=".">
            <patternset>
                <include name="**/*.*"/>
                <exclude name="${iPlugName}/conf/communication.xml" />
                <exclude name="${iPlugName}/conf/default-datasource.properties" />
            </patternset>
        </unzip>

        <copy file="./${iPlugName}/lib/${mySqlDriver.jar}" todir="."/>
        <copy file="./${iPlugName}/lib/${postgresDriver.jar}" todir="."/>
        
        <delete>
            <fileset dir="${installDir}/lib" includes="**/*"/>
        </delete>
        
        <runtarget target="proceedAfterUnzipInstaller"/>

        <move toDir="${installDir}">
            <fileset dir="./${iPlugName}"/>
        </move>
    </target>

    <target name="proceedAfterUnzipInstaller">
        <!-- Our database driver executables -->
        <property name="mySqlDbDriver" location="./${mySqlDriver.jar}"/>
        <property name="postgresDbDriver" location="./${postgresDriver.jar}"/>

        <!-- unzip udk-importer-installer to base-directory used for set up/update of IGC database -->
        <unzip dest=".">
            <fileset dir="./${iPlugName}/lib">
                <include name="ingrid-udk-importer-*.jar" />
            </fileset>
            <patternset>
                <include name="**/ingrid-igc-schema_102*.sql"/>
            </patternset>
        </unzip>

    	<!-- also copy sql files to installation ! may be used for set up of oracle catalog ... -->
        <mkdir dir="${installDir}/conf/sql"/>
        <copy toDir="${installDir}/conf/sql">
            <fileset dir="." includes="**/ingrid-igc-schema_102*.sql"/>
        </copy>

    </target>

    <!-- =============================================
         = MAIN TARGETS                              =
         ============================================= -->

    <target name="StartInstallation" depends="configureProperties">
        <runtarget target="MoveFiles" />

        <if>
            <equals arg1="${useOracle}" arg2="true" />
            <then>
                <property name="myDbDriverClass" value="${oracleDriverClass}"/>
                <property name="myDbDialect"     value="${oracleHibernateDialect}"/>
            </then>
        <elseif>
            <equals arg1="${usePostgres}" arg2="true" />
            <then>
                <runtarget target="postgres.CheckDbs" />
                <property name="myDbDriverClass" value="${postgresDriverClass}"/>
                <property name="myDbDialect"     value="${postgresHibernateDialect}"/>
            </then>
        </elseif>
        <elseif>
            <equals arg1="${useMysql}" arg2="true" />
            <then>
                <runtarget target="mysql.CheckDbs" />
                <property name="myDbDriverClass" value="${mySqlDriverClass}"/>
                <property name="myDbDialect"     value="${mySqlHibernateDialect}"/>
            </then>
        </elseif>
        <else>
            <echo>Probleme bei der Ermittlung der Datenbank.</echo>
        </else>
        </if>

        <if>
            <equals arg1="${installProcedure}" arg2="true" />
            <then>
                <runtarget target="configurePlug"/>
             </then>
        </if>

        <runtarget target="runDatabaseStuff"/>
    </target>



    <!-- =============================================
         = WORKER                                    =
         ============================================= -->
    <target name="MoveFiles">
        <move toDir="${installDir}">
            <fileset dir="./${iPlugName}"/>
        </move>
        
        <chmod dir="${installDir}" perm="755" includes="**/*.sh"/>
        <mkdir dir="${installDir}/logs"/>
    </target>

    <target name="configurePlug" if="${installProcedure}">
        <echo>Schreiben der Konfiguration in die config.override.properties
        </echo>

        <touch file="${config}"/>
        <propertyfile file="${config}">
          <entry key="jetty.port" value="${localServerPort}" />
          <entry key="communications.ige" value="/ingrid-group:ige-ibus,${serverIp},${serverPort}" />
          <entry key="communications.ige.clientName" value="${clientName}" />
          <entry key="iplug.database.username" value="${_dbUser}" />
          <entry key="iplug.database.password" value="${_dbPassword}" />
          <entry key="iplug.database.url" value="${_dbUrl}" />
          <entry key="iplug.database.driver" value="${myDbDriverClass}" />
          <entry key="iplug.database.dialect" value="${myDbDialect}" />
          <entry key="igc.language" value="${igcLanguage}" />
          <entry key="igc.email" value="${igcEmail}" />
          <entry key="igc.partner" value="${igcPartner}" />
          <entry key="igc.provider" value="${igcProvider}" />
          <entry key="igc.name" value="${igcName}" />
          <entry key="igc.country" value="${igcCountry}" />
        </propertyfile>
    </target>

    <target name="runDatabaseStuff">
        <runtarget target="updateIGCDb"/>
    </target>

    <target name="updateIGCDb">
        <echo>Erstellung/Aktualisierung IGC Katalog.
        </echo> 

        <if>
            <equals arg1="${igc.db.not.exists}" arg2="true" />
            <then>
                <if>
                    <equals arg1="${usePostgres}" arg2="true" />
                    <then>
                        <runtarget target="postgres.importInitialSchema"/> 
                    </then>
                <elseif>
                    <equals arg1="${useMysql}" arg2="true" />
                    <then>
                        <runtarget target="mysql.importInitialSchema"/> 
                    </then>
                </elseif>
                </if>
            </then>
        </if>

    </target>
    
    <target name="cleanuptarget">
        <echo>
=================
Weiteres Vorgehen
=================

Gehen Sie ins Verzeichnis:
${installDir}
und rufen Sie von der Kommandozeile "sh start.sh start"
auf, um das iPlug zu starten.

Log Ausgaben finden sich in logs/log.log
        </echo>
    </target>

</project>
